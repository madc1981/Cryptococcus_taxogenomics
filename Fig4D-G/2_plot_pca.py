#!/usr/bin/env python3

#===============================================================================
# Author: Marco A. Coelho @ Heitman Lab, Duke University
# Date: 2025-05-28
# Version: 1.0
#
# Description:
#   Visualizes PC1 vs PC2 from a PCA eigenvector file generated by PLINK.
#   Helps assess population structure or genetic clustering patterns.
#
# Requirements:
#   - Conda environment: popgen_env
#   - Python libraries: pandas, matplotlib, seaborn
#
# Usage:
#   conda activate popgen_env
#   python 2_plot_pca.py
#
# Input:
#   core_pca.eigenvec    # PLINK PCA output (space-delimited)
#
# Output:
#   core_pca_PC1_vs_PC2.pdf
#   core_pca_PC1_vs_PC2.png
#===============================================================================

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# --- PLOTTING SETTINGS ---
plt.rcParams['pdf.fonttype'] = 42
plt.rcParams['svg.fonttype'] = 'none'
sns.set(style="whitegrid")

# --- INPUT ---
eigenvec_file = "core_pca.eigenvec"
output_prefix = "core_pca_PC1_vs_PC2"

# --- LOAD DATA ---
df = pd.read_csv(eigenvec_file, sep=r'\s+', header=None)
df.columns = ["FID", "IID"] + [f"PC{i}" for i in range(1, df.shape[1] - 1)]

# --- PLOT ---
plt.figure(figsize=(6.5, 5.5))
sns.scatterplot(
    data=df,
    x="PC1", y="PC2",
    hue="IID",
    palette="tab10",
    s=100, alpha=0.6,
    edgecolor='black', linewidth=0.4
)

plt.title("PCA: PC1 vs PC2", fontsize=14)
plt.xlabel("PC1", fontsize=12)
plt.ylabel("PC2", fontsize=12)
plt.legend(title="Strain", bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0.)
plt.tight_layout()

# --- SAVE OUTPUT ---
plt.savefig(f"{output_prefix}.pdf")
plt.savefig(f"{output_prefix}.png", dpi=300)
plt.close()

print(f"PCA plot saved as {output_prefix}.pdf and .png")
